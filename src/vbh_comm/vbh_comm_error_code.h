#ifndef COMM_ERROR_CODE_H_432874328987687643287432876
#define COMM_ERROR_CODE_H_432874328987687643287432876

#include "vbh_comm/vbh_comm_def_export.h"
namespace VBH
{
	enum __ERROR_CORE
	{
		EN_OK_TYPE = 0,
		/* common error */
		EN_MAX_COMMON_ERROR_VALUE = -1, 
		EN_COMMON_ERROR_CODE_NUM = 100, //错误码个数

		/* config error */
		EN_MAX_CONFIG_ERROR_VALUE = EN_MAX_COMMON_ERROR_VALUE - EN_COMMON_ERROR_CODE_NUM,
		EN_CONFIG_ERROR_CODE_NUM = 100,

		/* crypt error */
		EN_MAX_CRYPT_ERROR_VALUE = EN_MAX_CONFIG_ERROR_VALUE - EN_CONFIG_ERROR_CODE_NUM,
		EN_CRYPT_ERROR_CODE_NUM = 100,

		/* persistence error */
		EN_MAX_PERSISTENCE_ERROR_VALUE = EN_MAX_CRYPT_ERROR_VALUE - EN_CRYPT_ERROR_CODE_NUM,
		EN_PERSISTENCE_ERROR_CODE_NUM = 100,

		/* cc error */
		EN_MAX_CC_ERROR_VALUE = EN_MAX_PERSISTENCE_ERROR_VALUE - EN_PERSISTENCE_ERROR_CODE_NUM,
		EN_CC_ERROR_CODE_NUM = 500
	};

	enum __COMMON_ERROR_CODE //常见错误
	{
		EN_NOT_READY_ERROR_TYPE = EN_MAX_COMMON_ERROR_VALUE - 1, //未准备就绪
		EN_REENTRY_ERROR_TYPE = EN_MAX_COMMON_ERROR_VALUE - 2, //重入错误，重复提交错误
		EN_TIMEOUT_ERROR_TYPE = EN_MAX_COMMON_ERROR_VALUE - 3, //超时错误
		EN_NETWORK_ERROR_TYPE = EN_MAX_COMMON_ERROR_VALUE - 4, //网络错误
		EN_SYSTEM_ERROR_TYPE = EN_MAX_COMMON_ERROR_VALUE - 5, //服务器内部错误
		EN_DECODE_ERROR_TYPE = EN_MAX_COMMON_ERROR_VALUE - 6, //解码错误
		EN_CANNOT_FIND_SESSION_ERROR_TYPE = EN_MAX_COMMON_ERROR_VALUE - 7,
		EN_INVALID_INPUT_PARAM = EN_MAX_COMMON_ERROR_VALUE - 8, //系统使用者输入的参数不合法
		EN_LOGIC_FAILED_ERROR_TYPE = EN_MAX_COMMON_ERROR_VALUE - 9, //逻辑失败错误
		EN_ORDER_IS_NOT_READY_TYPE = EN_MAX_COMMON_ERROR_VALUE - 10, //order未准备就绪
		EN_TRANS_NOT_SUPPORT_QUERY = EN_MAX_COMMON_ERROR_VALUE - 11 //不支持查询的事务类型
	};

	enum __CONFIG_ERROR_CODE //
	{
		EN_CANNOT_FOUND_CHANNEL_COMMITTER_ERROR_TYPE = EN_MAX_CONFIG_ERROR_VALUE - 1, //未找到指定channel的committer
		EN_CANNOT_FOUND_CHANNEL_ORDER_CPS_ERROR_TYPE = EN_MAX_CONFIG_ERROR_VALUE - 2 //未找到指定channel的order-cps地址
	};

	enum __CRYPT_ERROR_CODE //加解密错误
	{
		EN_ENCRYPT_ERROR_TYPE = EN_MAX_CRYPT_ERROR_VALUE - 1, //加密错误
		EN_DECRYPT_ERROR_TYPE = EN_MAX_CRYPT_ERROR_VALUE - 2, //解密错误
		EN_SIGNATURE_VERIFY_ERROR_TYPE = EN_MAX_CRYPT_ERROR_VALUE - 3, //验证签名错误
		EN_NONCE_VERIFY_ERROR_TYPE = EN_MAX_CRYPT_ERROR_VALUE - 4 //随机数校验失败错误
	};

	enum __PERSISTENCE_ERROR_CODE //存储错误
	{
		EN_ORDER_CPS_BLOCK_CACHE_ALREADY_FULL = EN_MAX_PERSISTENCE_ERROR_VALUE - 1,  // order-cps的 block cache已满
		EN_UPDATE_INFO_CONFLICT_ERROR_TYPE = EN_MAX_PERSISTENCE_ERROR_VALUE - 2, //流水号不一致，发生冲突 错误
		EN_WRITE_SET_SYSTEM_ID_USED_UP = EN_MAX_PERSISTENCE_ERROR_VALUE - 3, //用户的系统ID耗尽
		EN_CLS_TABLE_READ_FAILED = EN_MAX_PERSISTENCE_ERROR_VALUE - 4, //定长存储表的读取失败
		EN_CLS_TABLE_MODIFY_FAILED = EN_MAX_PERSISTENCE_ERROR_VALUE - 5, //定长存储表的append/update操作失败
		EN_WRITE_DISK_FAILED = EN_MAX_PERSISTENCE_ERROR_VALUE - 6, //写磁盘失败
	};

	enum __CC_ERROR_CODE //cc错误
	{
		EN_CC_COMMON_ERROR_TYPE = EN_MAX_CC_ERROR_VALUE - 1, //cc侧的通用错误
		EN_CC_REFUSED_REGIST_USER_ERROR_TYPE = EN_MAX_CC_ERROR_VALUE - 2 //cc拒绝用户注册
	};

	VBH_COMM_DEF_EXPORT const char* GetErrorString(int nErrorCode);
}

#endif
